#    This file contains a list of all available settings and their default value for minetest.conf

#    By default, all the settings are commented and not functional.
#    Uncomment settings by removing the preceding #.

#    minetest.conf is read by default from:
#    ../minetest.conf
#    ../../minetest.conf
#    Any other path can be chosen by passing the path as a parameter
#    to the program, eg. "minetest.exe --config ../minetest.conf.example".

#    Further documentation:
#    http://wiki.minetest.net/

#
# Server / Singleplayer
#

#    Name of the server, to be displayed when players join and in the serverlist.
#    type: string
server_name = $(MERCURIO_SERVER_NAME)

#    Description of server, to be displayed when players join and in the serverlist.
#    type: string
server_description = [PT] Servidor de sobrevivência Minetest: explore o mundo com diversos veículos, conquiste o Nether e derrote Dragões! [EN] Minetest survival server: explore the world with several vehicles, conquer Nether and defeat Dragons!

#    Domain name of server, to be displayed in the serverlist.
#    type: string
server_address = $(MERCURIO_SERVER_ADDRESS)

#    Homepage of server, to be displayed in the serverlist.
#    type: string
server_url = https://forum.minetest.net/viewtopic.php?f=10&t=26364

#    Automatically report to the serverlist.
#    type: bool
server_announce = $(MERCURIO_SERVER_ANNOUNCE)

#    Announce to this serverlist.
#    type: string
serverlist_url = servers.minetest.net

#    Remove color codes from incoming chat messages
#    Use this to stop players from being able to use color in their messages
#    type: bool
strip_color_codes = true

## Network

#    Network port to listen (UDP).
#    This value will be overridden when starting from the main menu.
#    type: int
port = $(MERCURIO_PORT)

#    The network interface that the server listens on.
#    type: string
bind_address = 0.0.0.0

#    Enable to disallow old clients from connecting.
#    Older clients are compatible in the sense that they will not crash when connecting
#    to new servers, but they may not support all new features that you are expecting.
#    type: bool
strict_protocol_version_checking = false

#    Specifies URL from which client fetches media instead of using UDP.
#    $filename should be accessible from $remote_media$filename via cURL
#    (obviously, remote_media should end with a slash).
#    Files that are not present will be fetched the usual way.
#    type: string
# remote_media = remote_media = https://minetestmedia.foo-projects.org/
# Reference: https://forum.minetest.net/viewtopic.php?f=14&t=18951

#    Enable/disable running an IPv6 server.
#    Ignored if bind_address is set.
#    Needs enable_ipv6 to be enabled.
#    type: bool
# ipv6_server = false

### Advanced

#    Maximum number of blocks that are simultaneously sent per client.
#    The maximum total count is calculated dynamically:
#    max_total = ceil((#clients + max_users) * per_client / 4)
#    type: int
# max_simultaneous_block_sends_per_client = 40

#    To reduce lag, block transfers are slowed down when a player is building something.
#    This determines how long they are slowed down after placing or removing a node.
#    type: float
# full_block_send_enable_min_time_from_building = 2.0

#    Maximum number of packets sent per send step, if you have a slow connection
#    try reducing it, but don't reduce it to a number below double of targeted
#    client number.
#    type: int
# max_packets_per_iteration = 1024

## Game

#    Default game when creating a new world.
#    This will be overridden when creating a world from the main menu.
#    type: string
default_game = minetest

#    Message of the day displayed to players connecting.
#    type: string
motd = Bem-vindo ao Mercurio! Comandos úteis: "/help" para ajuda, "/news" para reler os updates, "/search shop *" para ver as lojas

#    Maximum number of players that can be connected simultaneously.
#    type: int
max_users = 32

#    World directory (everything in the world is stored here).
#    Not needed if starting from the main menu.
#    type: path
# map-dir = 

#    Time in seconds for item entity (dropped items) to live.
#    Setting it to -1 disables the feature.
#    type: int
item_entity_ttl = 600

#    Specifies the default stack size of nodes, items and tools.
#    Note that mods or games may explicitly set a stack for certain (or all) items.
#    type: int
default_stack_max = 1024

#    Enable players getting damage and dying.
#    type: bool
enable_damage = true

#    Enable creative mode for new created maps.
#    type: bool
creative_mode = false

#    A chosen map seed for a new map, leave empty for random.
#    Will be overridden when creating a new world in the main menu.
#    type: string
fixed_map_seed = minetest

#    New users need to input this password.
#    type: string
default_password = 

#    The privileges that new users automatically get.
#    See /privs in game for a full list on your server and mod configuration.
#    type: string
default_privs = basic_privs, interact, shout, home, tp, teleport

#    Privileges that players with basic_privs can grant
#    type: string
basic_privs = interact, shout, home, tp, teleport

#    Whether players are shown to clients without any range limit.
#    Deprecated, use the setting player_transfer_distance instead.
#    type: bool
# unlimited_player_transfer_distance = true

#    Defines the maximal player transfer distance in blocks (0 = unlimited).
#    type: int
player_transfer_distance = 512

#    Whether to allow players to damage and kill each other.
#    type: bool
enable_pvp = true

#    Enable mod channels support.
#    type: bool
# enable_mod_channels = false

#    If this is set, players will always (re)spawn at the given position.
#    type: string
# static_spawnpoint =

#    If enabled, new players cannot join with an empty password.
#    type: bool
disallow_empty_password = true

#    If enabled, disable cheat prevention in multiplayer.
#    type: bool
disable_anticheat = false

#    If enabled, actions are recorded for rollback.
#    This option is only read when server starts.
#    type: bool
enable_rollback_recording = false

#    Format of player chat messages. The following strings are valid placeholders:
#    @name, @message, @timestamp (optional)
#    type: string
chat_message_format = <@name> @message

#    A message to be displayed to all clients when the server shuts down.
#    type: string
kick_msg_shutdown = Servidor está reiniciando. Voltamos em breve!!! \n Server is restarting. We will be back soon!

#    A message to be displayed to all clients when the server crashes.
#    type: string
kick_msg_crash =  Alguma coisa deu errado e vamos reiniciar. Por favor reconecte-se! \n Ooops! Something went wrong. Please reconnect.

#    Whether to ask clients to reconnect after a (Lua) crash.
#    Set this to true if your server is set up to restart automatically.
#    type: bool
ask_reconnect_on_crash = true

#    From how far clients know about objects, stated in mapblocks (16 nodes).
#    
#    Setting this larger than active_block_range will also cause the server
#    to maintain active objects up to this distance in the direction the
#    player is looking. (This can avoid mobs suddenly disappearing from view)
#    type: int
active_object_send_range_blocks = 4

#    The radius of the volume of blocks around every player that is subject to the
#    active block stuff, stated in mapblocks (16 nodes).
#    In active blocks objects are loaded and ABMs run.
#    This is also the minimum range in which active objects (mobs) are maintained.
#    This should be configured together with active_object_send_range_blocks.
#    type: int
active_block_range = 3

#    From how far blocks are sent to clients, stated in mapblocks (16 nodes).
#    type: int
max_block_send_distance = 10

#    Maximum number of forceloaded mapblocks.
#    type: int
max_forceloaded_blocks = 16

#    Interval of sending time of day to clients.
#    type: int
time_send_interval = 5

#    Controls length of day/night cycle.
#    Examples:
#    72 = 20min, 360 = 4min, 1 = 24hour, 0 = day/night/whatever stays unchanged.
#    type: int
time_speed = 72

#    Time of day when a new world is started, in millihours (0-23999).
#    type: int min: 0 max: 23999
# world_start_time = 6125

#    Interval of saving important changes in the world, stated in seconds.
#    type: float
server_map_save_interval = 15.3

#    Set the maximum character length of a chat message sent by clients.
#    type: int
chat_message_max_size = 500

#    Amount of messages a player may send per 10 seconds.
#    type: float
chat_message_limit_per_10sec = 10.0

#    Kick players who sent more than X messages per 10 seconds.
#    type: int
chat_message_limit_trigger_kick = 50

### Physics

#    Horizontal and vertical acceleration on ground or when climbing,
#    in nodes per second per second.
#    type: float
# movement_acceleration_default = 3

#    Horizontal acceleration in air when jumping or falling,
#    in nodes per second per second.
#    type: float
# movement_acceleration_air = 2

#    Horizontal and vertical acceleration in fast mode,
#    in nodes per second per second.
#    type: float
# movement_acceleration_fast = 10

#    Walking and flying speed, in nodes per second.
#    type: float
# movement_speed_walk = 4

#    Sneaking speed, in nodes per second.
#    type: float
# movement_speed_crouch = 1.35

#    Walking, flying and climbing speed in fast mode, in nodes per second.
#    type: float
movement_speed_fast = 8

#    Vertical climbing speed, in nodes per second.
#    type: float
# movement_speed_climb = 3

#    Initial vertical speed when jumping, in nodes per second.
#    type: float
# movement_speed_jump = 6.5

#    Decrease this to increase liquid resistance to movement.
#    type: float
# movement_liquid_fluidity = 1

#    Maximum liquid resistance. Controls deceleration when entering liquid at
#    high speed.
#    type: float
# movement_liquid_fluidity_smooth = 0.5

#    Controls sinking speed in liquid.
#    type: float
# movement_liquid_sink = 10

#    Acceleration of gravity, in nodes per second per second.
#    type: float
# movement_gravity = 9.81

### Advanced

#    Handling for deprecated Lua API calls:
#    -    legacy: (try to) mimic old behaviour (default for release).
#    -    log: mimic and log backtrace of deprecated call (default for debug).
#    -    error: abort on usage of deprecated call (suggested for mod developers).
#    type: enum values: legacy, log, error
# deprecated_lua_api_handling = legacy

#    Number of extra blocks that can be loaded by /clearobjects at once.
#    This is a trade-off between sqlite transaction overhead and
#    memory consumption (4096=100MB, as a rule of thumb).
#    type: int
# max_clearobjects_extra_loaded_blocks = 4096

#    How much the server will wait before unloading unused mapblocks.
#    Higher value is smoother, but will use more RAM.
#    type: int
server_unload_unused_data_timeout = 32

#    Maximum number of statically stored objects in a block.
#    type: int
# max_objects_per_block = 64

#    See https://www.sqlite.org/pragma.html#pragma_synchronous
#    type: enum values: 0, 1, 2
# sqlite_synchronous = 2

#    Length of a server tick and the interval at which objects are generally updated over
#    network.
#    type: float
# dedicated_server_step = 0.09

#    Length of time between active block management cycles
#    type: float
# active_block_mgmt_interval = 2.0

#    Length of time between Active Block Modifier (ABM) execution cycles
#    type: float
# abm_interval = 1.0

#    Length of time between NodeTimer execution cycles
#    type: float
# nodetimer_interval = 0.2

#    If enabled, invalid world data won't cause the server to shut down.
#    Only enable this if you know what you are doing.
#    type: bool
# ignore_world_load_errors = false

#    Max liquids processed per step.
#    type: int
# liquid_loop_max = 100000

#    The time (in seconds) that the liquids queue may grow beyond processing
#    capacity until an attempt is made to decrease its size by dumping old queue
#    items.  A value of 0 disables the functionality.
#    type: int
# liquid_queue_purge_time = 0

#    Liquid update interval in seconds.
#    type: float
# liquid_update = 1.0

#    At this distance the server will aggressively optimize which blocks are sent to
#    clients.
#    Small values potentially improve performance a lot, at the expense of visible
#    rendering glitches (some blocks will not be rendered under water and in caves,
#    as well as sometimes on land).
#    Setting this to a value greater than max_block_send_distance disables this
#    optimization.
#    Stated in mapblocks (16 nodes).
#    type: int min: 2
block_send_optimize_distance = 3

#    If enabled the server will perform map block occlusion culling based on
#    on the eye position of the player. This can reduce the number of blocks
#    sent to the client 50-80%. The client will not longer receive most invisible
#    so that the utility of noclip mode is reduced.
#    type: bool
# server_side_occlusion_culling = true

#    Restricts the access of certain client-side functions on servers.
#    Combine the byteflags below to restrict client-side features, or set to 0
#    for no restrictions:
#    LOAD_CLIENT_MODS: 1 (disable loading client-provided mods)
#    CHAT_MESSAGES: 2 (disable send_chat_message call client-side)
#    READ_ITEMDEFS: 4 (disable get_item_def call client-side)
#    READ_NODEDEFS: 8 (disable get_node_def call client-side)
#    LOOKUP_NODES_LIMIT: 16 (limits get_node call client-side to
#    csm_restriction_noderange)
#    READ_PLAYERINFO: 32 (disable get_player_names call client-side)
#    type: int
# csm_restriction_flags = 62

#    If the CSM restriction for node range is enabled, get_node calls are limited
#    to this distance from the player to the node.
#    type: int
# csm_restriction_noderange = 0

## Security

#    Prevent mods from doing insecure things like running shell commands.
#    type: bool
secure.enable_security = true

#    Comma-separated list of trusted mods that are allowed to access insecure
#    functions even when mod security is on (via request_insecure_environment()).
#    type: string
# secure.trusted_mods =

#    Comma-separated list of mods that are allowed to access HTTP APIs, which
#    allow them to upload and download data to/from the internet.
#    type: string
secure.http_mods = telegram, mapserver, discordmt

## Advanced

### Profiling

#    Load the game profiler to collect game profiling data.
#    Provides a /profiler command to access the compiled profile.
#    Useful for mod developers and server operators.
#    type: bool
profiler.load = $(MERCURIO_LOAD_PROFILER)

#    The default format in which profiles are being saved,
#    when calling `/profiler save [format]` without format.
#    type: enum values: txt, csv, lua, json, json_pretty
# profiler.default_report_format = txt

#    The file path relative to your worldpath in which profiles will be saved to.
#    type: string
# profiler.report_path = ""

#### Instrumentation

#    Instrument the methods of entities on registration.
#    type: bool
instrument.entity = true

#    Instrument the action function of Active Block Modifiers on registration.
#    type: bool
instrument.abm = true

#    Instrument the action function of Loading Block Modifiers on registration.
#    type: bool
instrument.lbm = true

#    Instrument chatcommands on registration.
#    type: bool
instrument.chatcommand = true

#    Instrument global callback functions on registration.
#    (anything you pass to a minetest.register_*() function)
#    type: bool
instrument.global_callback = true

##### Advanced

#    Instrument builtin.
#    This is usually only needed by core/builtin contributors
#    type: bool
# instrument.builtin = false

#    Have the profiler instrument itself:
#    * Instrument an empty function.
#    This estimates the overhead, that instrumentation is adding (+1 function call).
#    * Instrument the sampler being used to update the statistics.
#    type: bool
# instrument.profiler = false

#
# Client and Server
#

#    Name of the player.
#    When running a server, clients connecting with this name are admins.
#    When starting from the main menu, this is overridden.
#    type: string
name = ronoaldo

#    Set the language. Leave empty to use the system language.
#    A restart is required after changing this.
#    type: enum values: , ar, ca, cs, da, de, dv, el, en, eo, es, et, eu, fil, fr, hu, id, it, ja, ja_KS, jbo, kk, kn, lo, lt, ms, my, nb, nl, nn, pl, pt, pt_BR, ro, ru, sl, sr_Cyrl, sv, sw, th, tr, uk, vi
language = pt_BR

#    Level of logging to be written to debug.txt:
#    -    <nothing> (no logging)
#    -    none (messages with no level)
#    -    error
#    -    warning
#    -    action
#    -    info
#    -    verbose
#    type: enum values: , none, error, warning, action, info, verbose
debug_log_level = $(MERCURIO_DEBUG_LOGLEVEL)

#    If the file size of debug.txt exceeds the number of megabytes specified in
#    this setting when it is opened, the file is moved to debug.txt.1,
#    deleting an older debug.txt.1 if it exists.
#    debug.txt is only moved if this setting is positive.
#    type: int
debug_log_size_max = 500

#    Minimal level of logging to be written to chat.
#    type: enum values: , none, error, warning, action, info, verbose
chat_log_level = none

#    Enable IPv6 support (for both client and server).
#    Required for IPv6 connections to work at all.
#    type: bool
# enable_ipv6 = true

## Advanced

#    Default timeout for cURL, stated in milliseconds.
#    Only has an effect if compiled with cURL.
#    type: int
# curl_timeout = 5000

#    Limits number of parallel HTTP requests. Affects:
#    -    Media fetch if server uses remote_media setting.
#    -    Serverlist download and server announcement.
#    -    Downloads performed by main menu (e.g. mod manager).
#    Only has an effect if compiled with cURL.
#    type: int
# curl_parallel_limit = 8

#    Maximum time in ms a file download (e.g. a mod download) may take.
#    type: int
# curl_file_download_timeout = 300000

#    Makes DirectX work with LuaJIT. Disable if it causes troubles.
#    type: bool
# high_precision_fpu = true

#    Changes the main menu UI:
#    -   Full:  Multiple singleplayer worlds, game choice, texture pack chooser, etc.
#    -   Simple: One singleplayer world, no game or texture pack choosers. May be
#    necessary for smaller screens.
#    type: enum values: full, simple
# main_menu_style = full

#    Replaces the default main menu with a custom one.
#    type: string
# main_menu_script =

#    Print the engine's profiling data in regular intervals (in seconds).
#    0 = disable. Useful for developers.
#    type: int
# profiler_print_interval = 0

#
# Mapgen
#

#    Name of map generator to be used when creating a new world.
#    Creating a world in the main menu will override this.
#    Current mapgens in a highly unstable state:
#    -    The optional floatlands of v7 (disabled by default).
#    type: enum values: v7, valleys, carpathian, v5, flat, fractal, singlenode, v6
# mg_name = v7

#    Water surface level of the world.
#    type: int
# water_level = 1

#    From how far blocks are generated for clients, stated in mapblocks (16 nodes).
#    type: int
# max_block_generate_distance = 8

#    Limit of map generation, in nodes, in all 6 directions from (0, 0, 0).
#    Only mapchunks completely within the mapgen limit are generated.
#    Value is stored per-world.
#    type: int min: 0 max: 31000
# mapgen_limit = 31000

#    Global map generation attributes.
#    In Mapgen v6 the 'decorations' flag controls all decorations except trees
#    and junglegrass, in all other mapgens this flag controls all decorations.
#    type: flags possible values: caves, dungeons, light, decorations, biomes, nocaves, nodungeons, nolight, nodecorations, nobiomes
# mg_flags = caves,dungeons,light,decorations,biomes

## Biome API temperature and humidity noise parameters

#    Temperature variation for biomes.
#    type: noise_params_2d
# mg_biome_np_heat = {
#    offset      = 50,
#    scale       = 50,
#    spread      = (1000, 1000, 1000),
#    seed        = 5349,
#    octaves     = 3,
#    persistence = 0.5,
#    lacunarity  = 2.0,
#    flags       = eased
# }

#    Small-scale temperature variation for blending biomes on borders.
#    type: noise_params_2d
# mg_biome_np_heat_blend = {
#    offset      = 0,
#    scale       = 1.5,
#    spread      = (8, 8, 8),
#    seed        = 13,
#    octaves     = 2,
#    persistence = 1.0,
#    lacunarity  = 2.0,
#    flags       = eased
# }

#    Humidity variation for biomes.
#    type: noise_params_2d
# mg_biome_np_humidity = {
#    offset      = 50,
#    scale       = 50,
#    spread      = (1000, 1000, 1000),
#    seed        = 842,
#    octaves     = 3,
#    persistence = 0.5,
#    lacunarity  = 2.0,
#    flags       = eased
# }

#    Small-scale humidity variation for blending biomes on borders.
#    type: noise_params_2d
# mg_biome_np_humidity_blend = {
#    offset      = 0,
#    scale       = 1.5,
#    spread      = (8, 8, 8),
#    seed        = 90003,
#    octaves     = 2,
#    persistence = 1.0,
#    lacunarity  = 2.0,
#    flags       = eased
# }

## Mapgen V5

#    Map generation attributes specific to Mapgen v5.
#    type: flags possible values: caverns, nocaverns
# mgv5_spflags = caverns

#    Controls width of tunnels, a smaller value creates wider tunnels.
#    Value >= 10.0 completely disables generation of tunnels and avoids the
#    intensive noise calculations.
#    type: float
# mgv5_cave_width = 0.09

#    Y of upper limit of large caves.
#    type: int
# mgv5_large_cave_depth = -256

#    Minimum limit of random number of small caves per mapchunk.
#    type: int min: 0 max: 256
# mgv5_small_cave_num_min = 0

#    Maximum limit of random number of small caves per mapchunk.
#    type: int min: 0 max: 256
# mgv5_small_cave_num_max = 0

#    Minimum limit of random number of large caves per mapchunk.
#    type: int min: 0 max: 64
# mgv5_large_cave_num_min = 0

#    Maximum limit of random number of large caves per mapchunk.
#    type: int min: 0 max: 64
# mgv5_large_cave_num_max = 2

#    Proportion of large caves that contain liquid.
#    type: float min: 0 max: 1
# mgv5_large_cave_flooded = 0.5

#    Y-level of cavern upper limit.
#    type: int
# mgv5_cavern_limit = -256

#    Y-distance over which caverns expand to full size.
#    type: int
# mgv5_cavern_taper = 256

#    Defines full size of caverns, smaller values create larger caverns.
#    type: float
# mgv5_cavern_threshold = 0.7

#    Lower Y limit of dungeons.
#    type: int
# mgv5_dungeon_ymin = -31000

#    Upper Y limit of dungeons.
#    type: int
# mgv5_dungeon_ymax = 31000

### Noises

#    Variation of biome filler depth.
#    type: noise_params_2d
# mgv5_np_filler_depth = {
#    offset      = 0,
#    scale       = 1,
#    spread      = (150, 150, 150),
#    seed        = 261,
#    octaves     = 4,
#    persistence = 0.7,
#    lacunarity  = 2.0,
#    flags       = eased
# }

#    Variation of terrain vertical scale.
#    When noise is < -0.55 terrain is near-flat.
#    type: noise_params_2d
# mgv5_np_factor = {
#    offset      = 0,
#    scale       = 1,
#    spread      = (250, 250, 250),
#    seed        = 920381,
#    octaves     = 3,
#    persistence = 0.45,
#    lacunarity  = 2.0,
#    flags       = eased
# }

#    Y-level of average terrain surface.
#    type: noise_params_2d
# mgv5_np_height = {
#    offset      = 0,
#    scale       = 10,
#    spread      = (250, 250, 250),
#    seed        = 84174,
#    octaves     = 4,
#    persistence = 0.5,
#    lacunarity  = 2.0,
#    flags       = eased
# }

#    First of two 3D noises that together define tunnels.
#    type: noise_params_3d
# mgv5_np_cave1 = {
#    offset      = 0,
#    scale       = 12,
#    spread      = (61, 61, 61),
#    seed        = 52534,
#    octaves     = 3,
#    persistence = 0.5,
#    lacunarity  = 2.0,
#    flags       = 
# }

#    Second of two 3D noises that together define tunnels.
#    type: noise_params_3d
# mgv5_np_cave2 = {
#    offset      = 0,
#    scale       = 12,
#    spread      = (67, 67, 67),
#    seed        = 10325,
#    octaves     = 3,
#    persistence = 0.5,
#    lacunarity  = 2.0,
#    flags       = 
# }

#    3D noise defining giant caverns.
#    type: noise_params_3d
# mgv5_np_cavern = {
#    offset      = 0,
#    scale       = 1,
#    spread      = (384, 128, 384),
#    seed        = 723,
#    octaves     = 5,
#    persistence = 0.63,
#    lacunarity  = 2.0,
#    flags       = 
# }

#    3D noise defining terrain.
#    type: noise_params_3d
# mgv5_np_ground = {
#    offset      = 0,
#    scale       = 40,
#    spread      = (80, 80, 80),
#    seed        = 983240,
#    octaves     = 4,
#    persistence = 0.55,
#    lacunarity  = 2.0,
#    flags       = eased
# }

#    3D noise that determines number of dungeons per mapchunk.
#    type: noise_params_3d
# mgv5_np_dungeons = {
#    offset      = 0.9,
#    scale       = 0.5,
#    spread      = (500, 500, 500),
#    seed        = 0,
#    octaves     = 2,
#    persistence = 0.8,
#    lacunarity  = 2.0,
#    flags       = 
# }

## Mapgen V6

#    Map generation attributes specific to Mapgen v6.
#    The 'snowbiomes' flag enables the new 5 biome system.
#    When the 'snowbiomes' flag is enabled jungles are automatically enabled and
#    the 'jungles' flag is ignored.
#    type: flags possible values: jungles, biomeblend, mudflow, snowbiomes, flat, trees, nojungles, nobiomeblend, nomudflow, nosnowbiomes, noflat, notrees
# mgv6_spflags = jungles,biomeblend,mudflow,snowbiomes,noflat,trees

#    Deserts occur when np_biome exceeds this value.
#    When the 'snowbiomes' flag is enabled, this is ignored.
#    type: float
# mgv6_freq_desert = 0.45

#    Sandy beaches occur when np_beach exceeds this value.
#    type: float
# mgv6_freq_beach = 0.15

#    Lower Y limit of dungeons.
#    type: int
# mgv6_dungeon_ymin = -31000

#    Upper Y limit of dungeons.
#    type: int
# mgv6_dungeon_ymax = 31000

### Noises

#    Y-level of lower terrain and seabed.
#    type: noise_params_2d
# mgv6_np_terrain_base = {
#    offset      = -4,
#    scale       = 20,
#    spread      = (250, 250, 250),
#    seed        = 82341,
#    octaves     = 5,
#    persistence = 0.6,
#    lacunarity  = 2.0,
#    flags       = eased
# }

#    Y-level of higher terrain that creates cliffs.
#    type: noise_params_2d
# mgv6_np_terrain_higher = {
#    offset      = 20,
#    scale       = 16,
#    spread      = (500, 500, 500),
#    seed        = 85039,
#    octaves     = 5,
#    persistence = 0.6,
#    lacunarity  = 2.0,
#    flags       = eased
# }

#    Varies steepness of cliffs.
#    type: noise_params_2d
# mgv6_np_steepness = {
#    offset      = 0.85,
#    scale       = 0.5,
#    spread      = (125, 125, 125),
#    seed        = -932,
#    octaves     = 5,
#    persistence = 0.7,
#    lacunarity  = 2.0,
#    flags       = eased
# }

#    Defines distribution of higher terrain.
#    type: noise_params_2d
# mgv6_np_height_select = {
#    offset      = 0.5,
#    scale       = 1,
#    spread      = (250, 250, 250),
#    seed        = 4213,
#    octaves     = 5,
#    persistence = 0.69,
#    lacunarity  = 2.0,
#    flags       = eased
# }

#    Varies depth of biome surface nodes.
#    type: noise_params_2d
# mgv6_np_mud = {
#    offset      = 4,
#    scale       = 2,
#    spread      = (200, 200, 200),
#    seed        = 91013,
#    octaves     = 3,
#    persistence = 0.55,
#    lacunarity  = 2.0,
#    flags       = eased
# }

#    Defines areas with sandy beaches.
#    type: noise_params_2d
# mgv6_np_beach = {
#    offset      = 0,
#    scale       = 1,
#    spread      = (250, 250, 250),
#    seed        = 59420,
#    octaves     = 3,
#    persistence = 0.50,
#    lacunarity  = 2.0,
#    flags       = eased
# }

#    Temperature variation for biomes.
#    type: noise_params_2d
# mgv6_np_biome = {
#    offset      = 0,
#    scale       = 1,
#    spread      = (500, 500, 500),
#    seed        = 9130,
#    octaves     = 3,
#    persistence = 0.50,
#    lacunarity  = 2.0,
#    flags       = eased
# }

#    Variation of number of caves.
#    type: noise_params_2d
# mgv6_np_cave = {
#    offset      = 6,
#    scale       = 6,
#    spread      = (250, 250, 250),
#    seed        = 34329,
#    octaves     = 3,
#    persistence = 0.50,
#    lacunarity  = 2.0,
#    flags       = eased
# }

#    Humidity variation for biomes.
#    type: noise_params_2d
# mgv6_np_humidity = {
#    offset      = 0.5,
#    scale       = 0.5,
#    spread      = (500, 500, 500),
#    seed        = 72384,
#    octaves     = 3,
#    persistence = 0.50,
#    lacunarity  = 2.0,
#    flags       = eased
# }

#    Defines tree areas and tree density.
#    type: noise_params_2d
# mgv6_np_trees = {
#    offset      = 0,
#    scale       = 1,
#    spread      = (125, 125, 125),
#    seed        = 2,
#    octaves     = 4,
#    persistence = 0.66,
#    lacunarity  = 2.0,
#    flags       = eased
# }

#    Defines areas where trees have apples.
#    type: noise_params_2d
# mgv6_np_apple_trees = {
#    offset      = 0,
#    scale       = 1,
#    spread      = (100, 100, 100),
#    seed        = 342902,
#    octaves     = 3,
#    persistence = 0.45,
#    lacunarity  = 2.0,
#    flags       = eased
# }

## Mapgen V7

#    Map generation attributes specific to Mapgen v7.
#    'ridges': Rivers.
#    'floatlands': Floating land masses in the atmosphere.
#    'caverns': Giant caves deep underground.
#    type: flags possible values: mountains, ridges, floatlands, caverns, nomountains, noridges, nofloatlands, nocaverns
mgv7_spflags = mountains,ridges,caverns,floatlands

#    Y of mountain density gradient zero level. Used to shift mountains vertically.
#    type: int
# mgv7_mount_zero_level = 0

#    Lower Y limit of floatlands.
#    type: int
# mgv7_floatland_ymin = 1024

#    Upper Y limit of floatlands.
#    type: int
# mgv7_floatland_ymax = 4096

#    Y-distance over which floatlands taper from full density to nothing.
#    Tapering starts at this distance from the Y limit.
#    For a solid floatland layer, this controls the height of hills/mountains.
#    Must be less than or equal to half the distance between the Y limits.
#    type: int
# mgv7_floatland_taper = 256

#    Exponent of the floatland tapering. Alters the tapering behaviour.
#    Value = 1.0 creates a uniform, linear tapering.
#    Values > 1.0 create a smooth tapering suitable for the default separated
#    floatlands.
#    Values < 1.0 (for example 0.25) create a more defined surface level with
#    flatter lowlands, suitable for a solid floatland layer.
#    type: float
# mgv7_float_taper_exp = 2.0

#    Adjusts the density of the floatland layer.
#    Increase value to increase density. Can be positive or negative.
#    Value = 0.0: 50% of volume is floatland.
#    Value = 2.0 (can be higher depending on 'mgv7_np_floatland', always test
#    to be sure) creates a solid floatland layer.
#    type: float
# mgv7_floatland_density = -0.6

#    Surface level of optional water placed on a solid floatland layer.
#    Water is disabled by default and will only be placed if this value is set
#    to above 'mgv7_floatland_ymax' - 'mgv7_floatland_taper' (the start of the
#    upper tapering).
#    ***WARNING, POTENTIAL DANGER TO WORLDS AND SERVER PERFORMANCE***:
#    When enabling water placement the floatlands must be configured and tested
#    to be a solid layer by setting 'mgv7_floatland_density' to 2.0 (or other
#    required value depending on 'mgv7_np_floatland'), to avoid
#    server-intensive extreme water flow and to avoid vast flooding of the
#    world surface below.
#    type: int
# mgv7_floatland_ywater = -31000

#    Controls width of tunnels, a smaller value creates wider tunnels.
#    Value >= 10.0 completely disables generation of tunnels and avoids the
#    intensive noise calculations.
#    type: float
# mgv7_cave_width = 0.09

#    Y of upper limit of large caves.
#    type: int
# mgv7_large_cave_depth = -33

#    Minimum limit of random number of small caves per mapchunk.
#    type: int min: 0 max: 256
# mgv7_small_cave_num_min = 0

#    Maximum limit of random number of small caves per mapchunk.
#    type: int min: 0 max: 256
# mgv7_small_cave_num_max = 0

#    Minimum limit of random number of large caves per mapchunk.
#    type: int min: 0 max: 64
# mgv7_large_cave_num_min = 0

#    Maximum limit of random number of large caves per mapchunk.
#    type: int min: 0 max: 64
# mgv7_large_cave_num_max = 2

#    Proportion of large caves that contain liquid.
#    type: float min: 0 max: 1
# mgv7_large_cave_flooded = 0.5

#    Y-level of cavern upper limit.
#    type: int
# mgv7_cavern_limit = -256

#    Y-distance over which caverns expand to full size.
#    type: int
# mgv7_cavern_taper = 256

#    Defines full size of caverns, smaller values create larger caverns.
#    type: float
# mgv7_cavern_threshold = 0.7

#    Lower Y limit of dungeons.
#    type: int
# mgv7_dungeon_ymin = -31000

#    Upper Y limit of dungeons.
#    type: int
# mgv7_dungeon_ymax = 31000

### Noises

#    Y-level of higher terrain that creates cliffs.
#    type: noise_params_2d
# mgv7_np_terrain_base = {
#    offset      = 4,
#    scale       = 70,
#    spread      = (600, 600, 600),
#    seed        = 82341,
#    octaves     = 5,
#    persistence = 0.6,
#    lacunarity  = 2.0,
#    flags       = eased
# }

#    Y-level of lower terrain and seabed.
#    type: noise_params_2d
# mgv7_np_terrain_alt = {
#    offset      = 4,
#    scale       = 25,
#    spread      = (600, 600, 600),
#    seed        = 5934,
#    octaves     = 5,
#    persistence = 0.6,
#    lacunarity  = 2.0,
#    flags       = eased
# }

#    Varies roughness of terrain.
#    Defines the 'persistence' value for terrain_base and terrain_alt noises.
#    type: noise_params_2d
# mgv7_np_terrain_persist = {
#    offset      = 0.6,
#    scale       = 0.1,
#    spread      = (2000, 2000, 2000),
#    seed        = 539,
#    octaves     = 3,
#    persistence = 0.6,
#    lacunarity  = 2.0,
#    flags       = eased
# }

#    Defines distribution of higher terrain and steepness of cliffs.
#    type: noise_params_2d
# mgv7_np_height_select = {
#    offset      = -8,
#    scale       = 16,
#    spread      = (500, 500, 500),
#    seed        = 4213,
#    octaves     = 6,
#    persistence = 0.7,
#    lacunarity  = 2.0,
#    flags       = eased
# }

#    Variation of biome filler depth.
#    type: noise_params_2d
# mgv7_np_filler_depth = {
#    offset      = 0,
#    scale       = 1.2,
#    spread      = (150, 150, 150),
#    seed        = 261,
#    octaves     = 3,
#    persistence = 0.7,
#    lacunarity  = 2.0,
#    flags       = eased
# }

#    Variation of maximum mountain height (in nodes).
#    type: noise_params_2d
# mgv7_np_mount_height = {
#    offset      = 256,
#    scale       = 112,
#    spread      = (1000, 1000, 1000),
#    seed        = 72449,
#    octaves     = 3,
#    persistence = 0.6,
#    lacunarity  = 2.0,
#    flags       = eased
# }

#    Defines large-scale river channel structure.
#    type: noise_params_2d
# mgv7_np_ridge_uwater = {
#    offset      = 0,
#    scale       = 1,
#    spread      = (1000, 1000, 1000),
#    seed        = 85039,
#    octaves     = 5,
#    persistence = 0.6,
#    lacunarity  = 2.0,
#    flags       = eased
# }

#    3D noise defining mountain structure and height.
#    Also defines structure of floatland mountain terrain.
#    type: noise_params_3d
# mgv7_np_mountain = {
#    offset      = -0.6,
#    scale       = 1,
#    spread      = (250, 350, 250),
#    seed        = 5333,
#    octaves     = 5,
#    persistence = 0.63,
#    lacunarity  = 2.0,
#    flags       = 
# }

#    3D noise defining structure of river canyon walls.
#    type: noise_params_3d
# mgv7_np_ridge = {
#    offset      = 0,
#    scale       = 1,
#    spread      = (100, 100, 100),
#    seed        = 6467,
#    octaves     = 4,
#    persistence = 0.75,
#    lacunarity  = 2.0,
#    flags       = 
# }

#    3D noise defining structure of floatlands.
#    If altered from the default, the noise 'scale' (0.7 by default) may need
#    to be adjusted, as floatland tapering functions best when this noise has
#    a value range of approximately -2.0 to 2.0.
#    type: noise_params_3d
# mgv7_np_floatland = {
#    offset      = 0,
#    scale       = 0.7,
#    spread      = (384, 96, 384),
#    seed        = 1009,
#    octaves     = 4,
#    persistence = 0.75,
#    lacunarity  = 1.618,
#    flags       = 
# }

#    3D noise defining giant caverns.
#    type: noise_params_3d
# mgv7_np_cavern = {
#    offset      = 0,
#    scale       = 1,
#    spread      = (384, 128, 384),
#    seed        = 723,
#    octaves     = 5,
#    persistence = 0.63,
#    lacunarity  = 2.0,
#    flags       = 
# }

#    First of two 3D noises that together define tunnels.
#    type: noise_params_3d
# mgv7_np_cave1 = {
#    offset      = 0,
#    scale       = 12,
#    spread      = (61, 61, 61),
#    seed        = 52534,
#    octaves     = 3,
#    persistence = 0.5,
#    lacunarity  = 2.0,
#    flags       = 
# }

#    Second of two 3D noises that together define tunnels.
#    type: noise_params_3d
# mgv7_np_cave2 = {
#    offset      = 0,
#    scale       = 12,
#    spread      = (67, 67, 67),
#    seed        = 10325,
#    octaves     = 3,
#    persistence = 0.5,
#    lacunarity  = 2.0,
#    flags       = 
# }

#    3D noise that determines number of dungeons per mapchunk.
#    type: noise_params_3d
# mgv7_np_dungeons = {
#    offset      = 0.9,
#    scale       = 0.5,
#    spread      = (500, 500, 500),
#    seed        = 0,
#    octaves     = 2,
#    persistence = 0.8,
#    lacunarity  = 2.0,
#    flags       = 
# }

## Mapgen Carpathian

#    Map generation attributes specific to Mapgen Carpathian.
#    type: flags possible values: caverns, rivers, nocaverns, norivers
# mgcarpathian_spflags = caverns,norivers

#    Defines the base ground level.
#    type: float
# mgcarpathian_base_level = 12.0

#    Defines the width of the river channel.
#    type: float
# mgcarpathian_river_width = 0.05

#    Defines the depth of the river channel.
#    type: float
# mgcarpathian_river_depth = 24.0

#    Defines the width of the river valley.
#    type: float
# mgcarpathian_valley_width = 0.25

#    Controls width of tunnels, a smaller value creates wider tunnels.
#    Value >= 10.0 completely disables generation of tunnels and avoids the
#    intensive noise calculations.
#    type: float
# mgcarpathian_cave_width = 0.09

#    Y of upper limit of large caves.
#    type: int
# mgcarpathian_large_cave_depth = -33

#    Minimum limit of random number of small caves per mapchunk.
#    type: int min: 0 max: 256
# mgcarpathian_small_cave_num_min = 0

#    Maximum limit of random number of small caves per mapchunk.
#    type: int min: 0 max: 256
# mgcarpathian_small_cave_num_max = 0

#    Minimum limit of random number of large caves per mapchunk.
#    type: int min: 0 max: 64
# mgcarpathian_large_cave_num_min = 0

#    Maximum limit of random number of large caves per mapchunk.
#    type: int min: 0 max: 64
# mgcarpathian_large_cave_num_max = 2

#    Proportion of large caves that contain liquid.
#    type: float min: 0 max: 1
# mgcarpathian_large_cave_flooded = 0.5

#    Y-level of cavern upper limit.
#    type: int
# mgcarpathian_cavern_limit = -256

#    Y-distance over which caverns expand to full size.
#    type: int
# mgcarpathian_cavern_taper = 256

#    Defines full size of caverns, smaller values create larger caverns.
#    type: float
# mgcarpathian_cavern_threshold = 0.7

#    Lower Y limit of dungeons.
#    type: int
# mgcarpathian_dungeon_ymin = -31000

#    Upper Y limit of dungeons.
#    type: int
# mgcarpathian_dungeon_ymax = 31000

### Noises

#    Variation of biome filler depth.
#    type: noise_params_2d
# mgcarpathian_np_filler_depth = {
#    offset      = 0,
#    scale       = 1,
#    spread      = (128, 128, 128),
#    seed        = 261,
#    octaves     = 3,
#    persistence = 0.7,
#    lacunarity  = 2.0,
#    flags       = eased
# }

#    First of 4 2D noises that together define hill/mountain range height.
#    type: noise_params_2d
# mgcarpathian_np_height1 = {
#    offset      = 0,
#    scale       = 5,
#    spread      = (251, 251, 251),
#    seed        = 9613,
#    octaves     = 5,
#    persistence = 0.5,
#    lacunarity  = 2.0,
#    flags       = eased
# }

#    Second of 4 2D noises that together define hill/mountain range height.
#    type: noise_params_2d
# mgcarpathian_np_height2 = {
#    offset      = 0,
#    scale       = 5,
#    spread      = (383, 383, 383),
#    seed        = 1949,
#    octaves     = 5,
#    persistence = 0.5,
#    lacunarity  = 2.0,
#    flags       = eased
# }

#    Third of 4 2D noises that together define hill/mountain range height.
#    type: noise_params_2d
# mgcarpathian_np_height3 = {
#    offset      = 0,
#    scale       = 5,
#    spread      = (509, 509, 509),
#    seed        = 3211,
#    octaves     = 5,
#    persistence = 0.5,
#    lacunarity  = 2.0,
#    flags       = eased
# }

#    Fourth of 4 2D noises that together define hill/mountain range height.
#    type: noise_params_2d
# mgcarpathian_np_height4 = {
#    offset      = 0,
#    scale       = 5,
#    spread      = (631, 631, 631),
#    seed        = 1583,
#    octaves     = 5,
#    persistence = 0.5,
#    lacunarity  = 2.0,
#    flags       = eased
# }

#    2D noise that controls the size/occurrence of rolling hills.
#    type: noise_params_2d
# mgcarpathian_np_hills_terrain = {
#    offset      = 1,
#    scale       = 1,
#    spread      = (1301, 1301, 1301),
#    seed        = 1692,
#    octaves     = 3,
#    persistence = 0.5,
#    lacunarity  = 2.0,
#    flags       = eased
# }

#    2D noise that controls the size/occurrence of ridged mountain ranges.
#    type: noise_params_2d
# mgcarpathian_np_ridge_terrain = {
#    offset      = 1,
#    scale       = 1,
#    spread      = (1889, 1889, 1889),
#    seed        = 3568,
#    octaves     = 3,
#    persistence = 0.5,
#    lacunarity  = 2.0,
#    flags       = eased
# }

#    2D noise that controls the size/occurrence of step mountain ranges.
#    type: noise_params_2d
# mgcarpathian_np_step_terrain = {
#    offset      = 1,
#    scale       = 1,
#    spread      = (1889, 1889, 1889),
#    seed        = 4157,
#    octaves     = 3,
#    persistence = 0.5,
#    lacunarity  = 2.0,
#    flags       = eased
# }

#    2D noise that controls the shape/size of rolling hills.
#    type: noise_params_2d
# mgcarpathian_np_hills = {
#    offset      = 0,
#    scale       = 3,
#    spread      = (257, 257, 257),
#    seed        = 6604,
#    octaves     = 6,
#    persistence = 0.5,
#    lacunarity  = 2.0,
#    flags       = eased
# }

#    2D noise that controls the shape/size of ridged mountains.
#    type: noise_params_2d
# mgcarpathian_np_ridge_mnt = {
#    offset      = 0,
#    scale       = 12,
#    spread      = (743, 743, 743),
#    seed        = 5520,
#    octaves     = 6,
#    persistence = 0.7,
#    lacunarity  = 2.0,
#    flags       = eased
# }

#    2D noise that controls the shape/size of step mountains.
#    type: noise_params_2d
# mgcarpathian_np_step_mnt = {
#    offset      = 0,
#    scale       = 8,
#    spread      = (509, 509, 509),
#    seed        = 2590,
#    octaves     = 6,
#    persistence = 0.6,
#    lacunarity  = 2.0,
#    flags       = eased
# }

#    2D noise that locates the river valleys and channels.
#    type: noise_params_2d
# mgcarpathian_np_rivers = {
#    offset      = 0,
#    scale       = 1,
#    spread      = (1000, 1000, 1000),
#    seed        = 85039,
#    octaves     = 5,
#    persistence = 0.6,
#    lacunarity  = 2.0,
#    flags       = eased
# }

#    3D noise for mountain overhangs, cliffs, etc. Usually small variations.
#    type: noise_params_3d
# mgcarpathian_np_mnt_var = {
#    offset      = 0,
#    scale       = 1,
#    spread      = (499, 499, 499),
#    seed        = 2490,
#    octaves     = 5,
#    persistence = 0.55,
#    lacunarity  = 2.0,
#    flags       = 
# }

#    First of two 3D noises that together define tunnels.
#    type: noise_params_3d
# mgcarpathian_np_cave1 = {
#    offset      = 0,
#    scale       = 12,
#    spread      = (61, 61, 61),
#    seed        = 52534,
#    octaves     = 3,
#    persistence = 0.5,
#    lacunarity  = 2.0,
#    flags       = 
# }

#    Second of two 3D noises that together define tunnels.
#    type: noise_params_3d
# mgcarpathian_np_cave2 = {
#    offset      = 0,
#    scale       = 12,
#    spread      = (67, 67, 67),
#    seed        = 10325,
#    octaves     = 3,
#    persistence = 0.5,
#    lacunarity  = 2.0,
#    flags       = 
# }

#    3D noise defining giant caverns.
#    type: noise_params_3d
# mgcarpathian_np_cavern = {
#    offset      = 0,
#    scale       = 1,
#    spread      = (384, 128, 384),
#    seed        = 723,
#    octaves     = 5,
#    persistence = 0.63,
#    lacunarity  = 2.0,
#    flags       = 
# }

#    3D noise that determines number of dungeons per mapchunk.
#    type: noise_params_3d
# mgcarpathian_np_dungeons = {
#    offset      = 0.9,
#    scale       = 0.5,
#    spread      = (500, 500, 500),
#    seed        = 0,
#    octaves     = 2,
#    persistence = 0.8,
#    lacunarity  = 2.0,
#    flags       = 
# }

## Mapgen Flat

#    Map generation attributes specific to Mapgen Flat.
#    Occasional lakes and hills can be added to the flat world.
#    type: flags possible values: lakes, hills, nolakes, nohills
# mgflat_spflags = nolakes,nohills

#    Y of flat ground.
#    type: int
# mgflat_ground_level = 8

#    Y of upper limit of large caves.
#    type: int
# mgflat_large_cave_depth = -33

#    Minimum limit of random number of small caves per mapchunk.
#    type: int min: 0 max: 256
# mgflat_small_cave_num_min = 0

#    Maximum limit of random number of small caves per mapchunk.
#    type: int min: 0 max: 256
# mgflat_small_cave_num_max = 0

#    Minimum limit of random number of large caves per mapchunk.
#    type: int min: 0 max: 64
# mgflat_large_cave_num_min = 0

#    Maximum limit of random number of large caves per mapchunk.
#    type: int min: 0 max: 64
# mgflat_large_cave_num_max = 2

#    Proportion of large caves that contain liquid.
#    type: float min: 0 max: 1
# mgflat_large_cave_flooded = 0.5

#    Controls width of tunnels, a smaller value creates wider tunnels.
#    Value >= 10.0 completely disables generation of tunnels and avoids the
#    intensive noise calculations.
#    type: float
# mgflat_cave_width = 0.09

#    Terrain noise threshold for lakes.
#    Controls proportion of world area covered by lakes.
#    Adjust towards 0.0 for a larger proportion.
#    type: float
# mgflat_lake_threshold = -0.45

#    Controls steepness/depth of lake depressions.
#    type: float
# mgflat_lake_steepness = 48.0

#    Terrain noise threshold for hills.
#    Controls proportion of world area covered by hills.
#    Adjust towards 0.0 for a larger proportion.
#    type: float
# mgflat_hill_threshold = 0.45

#    Controls steepness/height of hills.
#    type: float
# mgflat_hill_steepness = 64.0

#    Lower Y limit of dungeons.
#    type: int
# mgflat_dungeon_ymin = -31000

#    Upper Y limit of dungeons.
#    type: int
# mgflat_dungeon_ymax = 31000

### Noises

#    Defines location and terrain of optional hills and lakes.
#    type: noise_params_2d
# mgflat_np_terrain = {
#    offset      = 0,
#    scale       = 1,
#    spread      = (600, 600, 600),
#    seed        = 7244,
#    octaves     = 5,
#    persistence = 0.6,
#    lacunarity  = 2.0,
#    flags       = eased
# }

#    Variation of biome filler depth.
#    type: noise_params_2d
# mgflat_np_filler_depth = {
#    offset      = 0,
#    scale       = 1.2,
#    spread      = (150, 150, 150),
#    seed        = 261,
#    octaves     = 3,
#    persistence = 0.7,
#    lacunarity  = 2.0,
#    flags       = eased
# }

#    First of two 3D noises that together define tunnels.
#    type: noise_params_3d
# mgflat_np_cave1 = {
#    offset      = 0,
#    scale       = 12,
#    spread      = (61, 61, 61),
#    seed        = 52534,
#    octaves     = 3,
#    persistence = 0.5,
#    lacunarity  = 2.0,
#    flags       = 
# }

#    Second of two 3D noises that together define tunnels.
#    type: noise_params_3d
# mgflat_np_cave2 = {
#    offset      = 0,
#    scale       = 12,
#    spread      = (67, 67, 67),
#    seed        = 10325,
#    octaves     = 3,
#    persistence = 0.5,
#    lacunarity  = 2.0,
#    flags       = 
# }

#    3D noise that determines number of dungeons per mapchunk.
#    type: noise_params_3d
# mgflat_np_dungeons = {
#    offset      = 0.9,
#    scale       = 0.5,
#    spread      = (500, 500, 500),
#    seed        = 0,
#    octaves     = 2,
#    persistence = 0.8,
#    lacunarity  = 2.0,
#    flags       = 
# }

## Mapgen Fractal

#    Map generation attributes specific to Mapgen Fractal.
#    'terrain' enables the generation of non-fractal terrain:
#    ocean, islands and underground.
#    type: flags possible values: terrain, noterrain
# mgfractal_spflags = terrain

#    Controls width of tunnels, a smaller value creates wider tunnels.
#    Value >= 10.0 completely disables generation of tunnels and avoids the
#    intensive noise calculations.
#    type: float
# mgfractal_cave_width = 0.09

#    Y of upper limit of large caves.
#    type: int
# mgfractal_large_cave_depth = -33

#    Minimum limit of random number of small caves per mapchunk.
#    type: int min: 0 max: 256
# mgfractal_small_cave_num_min = 0

#    Maximum limit of random number of small caves per mapchunk.
#    type: int min: 0 max: 256
# mgfractal_small_cave_num_max = 0

#    Minimum limit of random number of large caves per mapchunk.
#    type: int min: 0 max: 64
# mgfractal_large_cave_num_min = 0

#    Maximum limit of random number of large caves per mapchunk.
#    type: int min: 0 max: 64
# mgfractal_large_cave_num_max = 2

#    Proportion of large caves that contain liquid.
#    type: float min: 0 max: 1
# mgfractal_large_cave_flooded = 0.5

#    Lower Y limit of dungeons.
#    type: int
# mgfractal_dungeon_ymin = -31000

#    Upper Y limit of dungeons.
#    type: int
# mgfractal_dungeon_ymax = 31000

#    Selects one of 18 fractal types.
#    1 = 4D "Roundy" Mandelbrot set.
#    2 = 4D "Roundy" Julia set.
#    3 = 4D "Squarry" Mandelbrot set.
#    4 = 4D "Squarry" Julia set.
#    5 = 4D "Mandy Cousin" Mandelbrot set.
#    6 = 4D "Mandy Cousin" Julia set.
#    7 = 4D "Variation" Mandelbrot set.
#    8 = 4D "Variation" Julia set.
#    9 = 3D "Mandelbrot/Mandelbar" Mandelbrot set.
#    10 = 3D "Mandelbrot/Mandelbar" Julia set.
#    11 = 3D "Christmas Tree" Mandelbrot set.
#    12 = 3D "Christmas Tree" Julia set.
#    13 = 3D "Mandelbulb" Mandelbrot set.
#    14 = 3D "Mandelbulb" Julia set.
#    15 = 3D "Cosine Mandelbulb" Mandelbrot set.
#    16 = 3D "Cosine Mandelbulb" Julia set.
#    17 = 4D "Mandelbulb" Mandelbrot set.
#    18 = 4D "Mandelbulb" Julia set.
#    type: int min: 1 max: 18
# mgfractal_fractal = 1

#    Iterations of the recursive function.
#    Increasing this increases the amount of fine detail, but also
#    increases processing load.
#    At iterations = 20 this mapgen has a similar load to mapgen V7.
#    type: int
# mgfractal_iterations = 11

#    (X,Y,Z) scale of fractal in nodes.
#    Actual fractal size will be 2 to 3 times larger.
#    These numbers can be made very large, the fractal does
#    not have to fit inside the world.
#    Increase these to 'zoom' into the detail of the fractal.
#    Default is for a vertically-squashed shape suitable for
#    an island, set all 3 numbers equal for the raw shape.
#    type: v3f
# mgfractal_scale = (4096.0, 1024.0, 4096.0)

#    (X,Y,Z) offset of fractal from world center in units of 'scale'.
#    Can be used to move a desired point to (0, 0) to create a
#    suitable spawn point, or to allow 'zooming in' on a desired
#    point by increasing 'scale'.
#    The default is tuned for a suitable spawn point for Mandelbrot
#    sets with default parameters, it may need altering in other
#    situations.
#    Range roughly -2 to 2. Multiply by 'scale' for offset in nodes.
#    type: v3f
# mgfractal_offset = (1.79, 0.0, 0.0)

#    W coordinate of the generated 3D slice of a 4D fractal.
#    Determines which 3D slice of the 4D shape is generated.
#    Alters the shape of the fractal.
#    Has no effect on 3D fractals.
#    Range roughly -2 to 2.
#    type: float
# mgfractal_slice_w = 0.0

#    Julia set only.
#    X component of hypercomplex constant.
#    Alters the shape of the fractal.
#    Range roughly -2 to 2.
#    type: float
# mgfractal_julia_x = 0.33

#    Julia set only.
#    Y component of hypercomplex constant.
#    Alters the shape of the fractal.
#    Range roughly -2 to 2.
#    type: float
# mgfractal_julia_y = 0.33

#    Julia set only.
#    Z component of hypercomplex constant.
#    Alters the shape of the fractal.
#    Range roughly -2 to 2.
#    type: float
# mgfractal_julia_z = 0.33

#    Julia set only.
#    W component of hypercomplex constant.
#    Alters the shape of the fractal.
#    Has no effect on 3D fractals.
#    Range roughly -2 to 2.
#    type: float
# mgfractal_julia_w = 0.33

### Noises

#    Y-level of seabed.
#    type: noise_params_2d
# mgfractal_np_seabed = {
#    offset      = -14,
#    scale       = 9,
#    spread      = (600, 600, 600),
#    seed        = 41900,
#    octaves     = 5,
#    persistence = 0.6,
#    lacunarity  = 2.0,
#    flags       = eased
# }

#    Variation of biome filler depth.
#    type: noise_params_2d
# mgfractal_np_filler_depth = {
#    offset      = 0,
#    scale       = 1.2,
#    spread      = (150, 150, 150),
#    seed        = 261,
#    octaves     = 3,
#    persistence = 0.7,
#    lacunarity  = 2.0,
#    flags       = eased
# }

#    First of two 3D noises that together define tunnels.
#    type: noise_params_3d
# mgfractal_np_cave1 = {
#    offset      = 0,
#    scale       = 12,
#    spread      = (61, 61, 61),
#    seed        = 52534,
#    octaves     = 3,
#    persistence = 0.5,
#    lacunarity  = 2.0,
#    flags       = 
# }

#    Second of two 3D noises that together define tunnels.
#    type: noise_params_3d
# mgfractal_np_cave2 = {
#    offset      = 0,
#    scale       = 12,
#    spread      = (67, 67, 67),
#    seed        = 10325,
#    octaves     = 3,
#    persistence = 0.5,
#    lacunarity  = 2.0,
#    flags       = 
# }

#    3D noise that determines number of dungeons per mapchunk.
#    type: noise_params_3d
# mgfractal_np_dungeons = {
#    offset      = 0.9,
#    scale       = 0.5,
#    spread      = (500, 500, 500),
#    seed        = 0,
#    octaves     = 2,
#    persistence = 0.8,
#    lacunarity  = 2.0,
#    flags       = 
# }

## Mapgen Valleys

#    Map generation attributes specific to Mapgen Valleys.
#    'altitude_chill': Reduces heat with altitude.
#    'humid_rivers': Increases humidity around rivers.
#    'vary_river_depth': If enabled, low humidity and high heat causes rivers
#    to become shallower and occasionally dry.
#    'altitude_dry': Reduces humidity with altitude.
#    type: flags possible values: altitude_chill, humid_rivers, vary_river_depth, altitude_dry, noaltitude_chill, nohumid_rivers, novary_river_depth, noaltitude_dry
# mgvalleys_spflags = altitude_chill,humid_rivers,vary_river_depth,altitude_dry

#    The vertical distance over which heat drops by 20 if 'altitude_chill' is
#    enabled. Also the vertical distance over which humidity drops by 10 if
#    'altitude_dry' is enabled.
#    type: int
# mgvalleys_altitude_chill = 90

#    Depth below which you'll find large caves.
#    type: int
# mgvalleys_large_cave_depth = -33

#    Minimum limit of random number of small caves per mapchunk.
#    type: int min: 0 max: 256
# mgvalleys_small_cave_num_min = 0

#    Maximum limit of random number of small caves per mapchunk.
#    type: int min: 0 max: 256
# mgvalleys_small_cave_num_max = 0

#    Minimum limit of random number of large caves per mapchunk.
#    type: int min: 0 max: 64
# mgvalleys_large_cave_num_min = 0

#    Maximum limit of random number of large caves per mapchunk.
#    type: int min: 0 max: 64
# mgvalleys_large_cave_num_max = 2

#    Proportion of large caves that contain liquid.
#    type: float min: 0 max: 1
# mgvalleys_large_cave_flooded = 0.5

#    Depth below which you'll find giant caverns.
#    type: int
# mgvalleys_cavern_limit = -256

#    Y-distance over which caverns expand to full size.
#    type: int
# mgvalleys_cavern_taper = 192

#    Defines full size of caverns, smaller values create larger caverns.
#    type: float
# mgvalleys_cavern_threshold = 0.6

#    How deep to make rivers.
#    type: int
# mgvalleys_river_depth = 4

#    How wide to make rivers.
#    type: int
# mgvalleys_river_size = 5

#    Controls width of tunnels, a smaller value creates wider tunnels.
#    Value >= 10.0 completely disables generation of tunnels and avoids the
#    intensive noise calculations.
#    type: float
# mgvalleys_cave_width = 0.09

#    Lower Y limit of dungeons.
#    type: int
# mgvalleys_dungeon_ymin = -31000

#    Upper Y limit of dungeons.
#    type: int
# mgvalleys_dungeon_ymax = 63

### Noises

#    First of two 3D noises that together define tunnels.
#    type: noise_params_3d
# mgvalleys_np_cave1 = {
#    offset      = 0,
#    scale       = 12,
#    spread      = (61, 61, 61),
#    seed        = 52534,
#    octaves     = 3,
#    persistence = 0.5,
#    lacunarity  = 2.0,
#    flags       = 
# }

#    Second of two 3D noises that together define tunnels.
#    type: noise_params_3d
# mgvalleys_np_cave2 = {
#    offset      = 0,
#    scale       = 12,
#    spread      = (67, 67, 67),
#    seed        = 10325,
#    octaves     = 3,
#    persistence = 0.5,
#    lacunarity  = 2.0,
#    flags       = 
# }

#    The depth of dirt or other biome filler node.
#    type: noise_params_2d
# mgvalleys_np_filler_depth = {
#    offset      = 0,
#    scale       = 1.2,
#    spread      = (256, 256, 256),
#    seed        = 1605,
#    octaves     = 3,
#    persistence = 0.5,
#    lacunarity  = 2.0,
#    flags       = eased
# }

#    3D noise defining giant caverns.
#    type: noise_params_3d
# mgvalleys_np_cavern = {
#    offset      = 0,
#    scale       = 1,
#    spread      = (768, 256, 768),
#    seed        = 59033,
#    octaves     = 6,
#    persistence = 0.63,
#    lacunarity  = 2.0,
#    flags       = 
# }

#    Defines large-scale river channel structure.
#    type: noise_params_2d
# mgvalleys_np_rivers = {
#    offset      = 0,
#    scale       = 1,
#    spread      = (256, 256, 256),
#    seed        = -6050,
#    octaves     = 5,
#    persistence = 0.6,
#    lacunarity  = 2.0,
#    flags       = eased
# }

#    Base terrain height.
#    type: noise_params_2d
# mgvalleys_np_terrain_height = {
#    offset      = -10,
#    scale       = 50,
#    spread      = (1024, 1024, 1024),
#    seed        = 5202,
#    octaves     = 6,
#    persistence = 0.4,
#    lacunarity  = 2.0,
#    flags       = eased
# }

#    Raises terrain to make valleys around the rivers.
#    type: noise_params_2d
# mgvalleys_np_valley_depth = {
#    offset      = 5,
#    scale       = 4,
#    spread      = (512, 512, 512),
#    seed        = -1914,
#    octaves     = 1,
#    persistence = 1.0,
#    lacunarity  = 2.0,
#    flags       = eased
# }

#    Slope and fill work together to modify the heights.
#    type: noise_params_3d
# mgvalleys_np_inter_valley_fill = {
#    offset      = 0,
#    scale       = 1,
#    spread      = (256, 512, 256),
#    seed        = 1993,
#    octaves     = 6,
#    persistence = 0.8,
#    lacunarity  = 2.0,
#    flags       = 
# }

#    Amplifies the valleys.
#    type: noise_params_2d
# mgvalleys_np_valley_profile = {
#    offset      = 0.6,
#    scale       = 0.5,
#    spread      = (512, 512, 512),
#    seed        = 777,
#    octaves     = 1,
#    persistence = 1.0,
#    lacunarity  = 2.0,
#    flags       = eased
# }

#    Slope and fill work together to modify the heights.
#    type: noise_params_2d
# mgvalleys_np_inter_valley_slope = {
#    offset      = 0.5,
#    scale       = 0.5,
#    spread      = (128, 128, 128),
#    seed        = 746,
#    octaves     = 1,
#    persistence = 1.0,
#    lacunarity  = 2.0,
#    flags       = eased
# }

#    3D noise that determines number of dungeons per mapchunk.
#    type: noise_params_3d
# mgvalleys_np_dungeons = {
#    offset      = 0.9,
#    scale       = 0.5,
#    spread      = (500, 500, 500),
#    seed        = 0,
#    octaves     = 2,
#    persistence = 0.8,
#    lacunarity  = 2.0,
#    flags       = 
# }

## Advanced

#    Size of mapchunks generated by mapgen, stated in mapblocks (16 nodes).
#    WARNING!: There is no benefit, and there are several dangers, in
#    increasing this value above 5.
#    Reducing this value increases cave and dungeon density.
#    Altering this value is for special usage, leaving it unchanged is
#    recommended.
#    type: int
chunksize = 4

#    Dump the mapgen debug information.
#    type: bool
# enable_mapgen_debug_info = false

#    Maximum number of blocks that can be queued for loading.
#    type: int
# emergequeue_limit_total = 512

#    Maximum number of blocks to be queued that are to be loaded from file.
#    This limit is enforced per player.
#    type: int
# emergequeue_limit_diskonly = 64

#    Maximum number of blocks to be queued that are to be generated.
#    This limit is enforced per player.
#    type: int
# emergequeue_limit_generate = 64

#    Number of emerge threads to use.
#    Value 0:
#    -    Automatic selection. The number of emerge threads will be
#    -    'number of processors - 2', with a lower limit of 1.
#    Any other value:
#    -    Specifies the number of emerge threads, with a lower limit of 1.
#    WARNING: Increasing the number of emerge threads increases engine mapgen
#    speed, but this may harm game performance by interfering with other
#    processes, especially in singleplayer and/or when running Lua code in
#    'on_generated'. For many users the optimum setting may be '1'.
#    type: int
# num_emerge_threads = 1

#
# Online Content Repository
#

#    The URL for the content repository
#    type: string
# contentdb_url = https://content.minetest.net

#    Comma-separated list of flags to hide in the content repository.
#    "nonfree" can be used to hide packages which do not qualify as 'free software',
#    as defined by the Free Software Foundation.
#    You can also specify content ratings.
#    These flags are independent from Minetest versions,
#    so see a full list at https://content.minetest.net/help/content_flags/
#    type: string
# contentdb_flag_blacklist = nonfree, desktop_default

#    Default world generation
mg_name = v7

#    minetest_game settings
give_initial_stuff = true
bones_position_message = true
river_source_sounds = true

#    hudbards
hbarmor_autohide = false
hudbars_bar_type = statbar_modern

#    hbsprint
sprint_speed = 3
sprint_jump = 1.3
sprint_particles = 4
sprint_forward_only = false
sprint_stamina_drain = 0.8
sprint_starve_drain  = 0.2
starve_limit = 2
hudbars_autohide_stamina = true

#    areas
areas.self_protection = true 

#    water_life
water_life_dangerous = false
water_life_bloody = true
water_life_hate_insects = e
water_life_moskitolifetime = 1

#    mobs
mobs_disable_blood = false
mob_chance_multiplier = 1.2

#    lumberjack
lumberjack_points = 0

#    3d_armor
wieldview_node_tiles = false
wieldview_update_time = 2

#    telegram
telegram.token = $(MERCURIO_TELEGRAM_TOKEN)
telegram.timeout = 4
telegram.chatid = $(MERCURIO_TELEGRAM_CHATID)
telegram.announce_mode = all

#    discordmt
discord.port = 9000
discord.host = discordmt

#    mtimer
mtimer_color = #ffffff
mtimer_hud_element_size = 1
mtimer_position = ml
mtimer_timezone_offset = -3
mtimer_visible = true
mtimer_host_time_format = {24h}:{min}
mtimer_ingame_time_format = {24h}:{min}
mtimer_real_time_format = {24h}:{min}
mtimer_session_duration_format = {hours}:{minutes}
mtimer_session_start_time_format = {24h}:{min}

#    draconis
# Enable simple spawning so they appear more often
simple_spawning = true 
simple_spawn_rate = 2500
# Nest spawning
nest_spawning = true
nest_spawn_rate = 16
# Ice and Fire spawning (caverns and roosts)
i_f_spawning = true
roost_spawn_rate = 16
cavern_spawn_rate = 16
# Avoid destroying player builds for now
terrain_destruction = false
# Let's make them have moe unique colors 
unique_color_chance = 16

#   dmobs
remove_far_mobs=true
dmobs.allow_nyanc=false

#   pvp_area
pvp_area_center = (150, 1300, 25)
pvp_area_size   = 700

#   mapserver
mapserver.url = http://mapserver:8080
mapserver.key = $(MERCURIO_MAPSERVER_KEY)
mapserver.enable_crafting = true
mapserver.send_interval = 1

#   nether
# Attempt to fix #14 for new blocks generated
# (ref: https://github.com/minetest-mods/nether/issues/51)
nether_depth_ymin = -11072


#   beta server
mercurio_beta_server=$(MERCURIO_BETA_SERVER)

#   mtinfo
mtinfo.enabled=true
mtinfo.autoshutdown=$(MERCURIO_MTINFO_AUTOSHUTDOWN)

#   minenews
minenews.discord_invite = https://r.ronoaldo.com/mercurio
